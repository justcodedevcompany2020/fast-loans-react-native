import React, {Component} from 'react';
import Svg, {
  Path,
  Rect,
  Circle,
  Defs,
  Stop,
  ClipPath,
  G,
  Mask,
} from 'react-native-svg';

import {AuthContext} from '../AuthContext/context';
import AsyncStorage from '@react-native-async-storage/async-storage';
import LoginIcon from '../../assets/svg/login_icon';
import CloseIcon from '../../assets/svg/close_icon';
import PhoneIcon from '../../assets/svg/phone_code_icon';
import PhoneCodeCloseIcon from '../../assets/svg/phone_code_close_icon';
import appsFlyer from 'react-native-appsflyer';

import {
  Text,
  Alert,
  Button,
  View,
  StyleSheet,
  TouchableOpacity,
  Image,
  TextInput,
  ActivityIndicator,
  ImageBackground,
  ScrollView,
  Dimensions,
  Keyboard,
  KeyboardAvoidingView,
  Platform,
  StatusBar,
} from 'react-native';

const windowWidth = Dimensions.get('window').width;
const windowHeight = Dimensions.get('window').height;

import {
  SafeAreaView,
  SafeAreaProvider,
  SafeAreaInsetsContext,
  useSafeAreaInsets,
  initialWindowMetrics,
} from 'react-native-safe-area-context';
import {KeyboardAwareScrollView} from 'react-native-keyboard-aware-scroll-view';
import AutoHeightImage from 'react-native-auto-height-image';

export default class App extends Component {
  constructor(props) {
    super(props);

    this.state = {
      phone: '',
      phone_error: false,
      phone_error_text: '',
      privacy_policy: false,
      privacy_policy_error: false,
      phone_disable_button: false,
      privacy_policy_popup: false,
      code: ['', '', '', ''],
      isButtonDisabled: true,
      timer: 60,
      keyboardOpen: false,
      phone_code_popup: false,

      phone_error_popup: false,
      phone_error_popup2: false,
      phone_code_error_popup: false,
    };
    this.inputRefs = [];
  }

  static contextType = AuthContext;

  handleChange = (text, index) => {
    const {code} = this.state;
    const newCode = [...code];
    newCode[index] = text;
    this.setState({
      code: newCode,
      isButtonDisabled: newCode.some(value => !value),
    });
    if (text && index < this.inputRefs.length - 1) {
      this.inputRefs[index + 1].focus();
    }
  };

  handleKeyPress = (event, index) => {
    const {code} = this.state;
    if (event.nativeEvent.key === 'Backspace' && !code[index] && index > 0) {
      this.inputRefs[index - 1].focus();
    }
  };

  phoneValidation = val => {
    let x = val
      .replace(/\D/g, '')
      .match(/(\d{0,1})(\d{0,3})(\d{0,3})(\d{0,2})(\d{0,2})/);
    let myPhone = !x[2]
      ? '+7 ' + (x[1] != '7' ? x[1] : '')
      : !x[3]
      ? '+7 (' + x[2]
      : '+7 (' +
        x[2] +
        ') ' +
        (x[3] ? x[3] : '') +
        (x[4] ? ' - ' + x[4] : '') +
        (x[5] ? ' - ' + x[5] : '');

    const isValid = this.validatePhoneNumber(myPhone);
    console.log(isValid, 'isvalid');
    this.setState({
      phone_disable_button: isValid,
    });

    this.setState({phone: myPhone});
  };
  validatePhoneNumber(phoneNumber) {
    let regex = /^((\7|7|8)+([0-9]){10})$/;
    let new_phone = phoneNumber.replace(/\D/g, '');
    return regex.test(new_phone);
  }
  componentDidMount() {
    appsFlyer.initSdk(
      {
        devKey: 'LdHW3zZexY8DHLWERgatNU',
        isDebug: true, // Set to false for production
      },
      result => {
        console.log(result, 'reesss');
      },
      error => {
        console.error(error);
      },
    );
    this.timerInterval = setInterval(() => {
      this.setState(prevState => ({
        timer: prevState.timer > 0 ? prevState.timer - 1 : 0,
      }));
    }, 1000);
    this.keyboardDidShowListener = Keyboard.addListener(
      'keyboardDidShow',
      this._keyboardDidShow,
    );
    this.keyboardDidHideListener = Keyboard.addListener(
      'keyboardDidHide',
      this._keyboardDidHide,
    );
  }

  componentWillUnmount() {
    this.keyboardDidShowListener.remove();
    this.keyboardDidHideListener.remove();
    clearInterval(this.timerInterval);
  }
  //
  //   handleResend = () => {
  //        this.setState({
  //            timer: 60,
  //        })
  // }

  redirectToCatalog = () => {
    this.props.navigation.navigate('Catalog');
  };

  _keyboardDidShow = event => {
    this.setState({
      keyboardOpen: true,
    });
    console.log('open');
  };

  _keyboardDidHide = event => {
    this.setState({
      keyboardOpen: false,
    });
    console.log('close');
  };

  getRandomInt() {
    const random = Math.floor(Math.random() * 9000 + 1000);

    console.log(random, 'random');
    return random;
  }

  findInString(str, substring) {
    return str.indexOf(substring) !== -1;
  }

  sendPhone = async () => {
    let {phone, privacy_policy} = this.state;
    let cleaned_phone_number = '+' + phone.replace(/\D/g, '');
    if (!privacy_policy) {
      this.setState({
        privacy_policy_error: true,
      });
    } else {
      this.setState({
        privacy_policy_error: false,
      });
      try {
        fetch('https://fastloans.justcode.am/api/send_call', {
          method: 'POST',
          headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            phone: cleaned_phone_number,
          }),
        })
          .then(response => {
            return response.json();
          })
          .then(async response => {
            console.log(response, 'phoneCode');

            if (response.hasOwnProperty('code')) {
              this.handlePress();
              await AsyncStorage.setItem(
                'phoneCode',
                JSON.stringify(response.code),
              );
              this.setState({
                phone_code_popup: true,
                timer: 60,
              });
            } else {
              if (response.hasOwnProperty('message')) {
                if (response.message == 'server error') {
                  this.setState({
                    phone_error_popup2: true,
                  });
                  setTimeout(() => {
                    this.setState({
                      phone_error_popup2: false,
                    });
                  }, 2000);
                }
              }
              this.setState({
                phone_error_popup: true,
              });
              setTimeout(() => {
                this.setState({
                  phone_error_popup: false,
                });
              }, 2000);
            }
          });
      } catch (e) {
        console.log(e);
      }
    }
  };
  handleResend = async () => {
    let {phone} = this.state;
    let cleaned_phone_number = '+' + phone.replace(/\D/g, '');

    try {
      fetch('https://fastloans.justcode.am/api/send_call', {
        method: 'POST',
        headers: {
          Accept: 'application/json',
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          phone: cleaned_phone_number,
        }),
      })
        .then(response => {
          return response.json();
        })
        .then(async response => {
          console.log(response, 'phoneCode');

          if (response.hasOwnProperty('status')) {
            if (response.status === true && response.hasOwnProperty('code')) {
              await AsyncStorage.setItem(
                'phoneCode',
                JSON.stringify(response.code),
              );
              this.setState({
                timer: 60,
              });
            }
          }
        });
    } catch (e) {
      console.log(e);
    }
  };

  sendCode = async () => {
    let phoneCode = await AsyncStorage.getItem('phoneCode');
    let phoneCodeFinal = JSON.parse(phoneCode);
    console.log(phoneCodeFinal, 'phoneCodeee');
    let {code} = this.state;
    let codes = code.join('');
    console.log(codes, 'mycoddee');
    if (phoneCodeFinal != codes) {
      this.setState({
        phone_code_error_popup: true,
      });
      setTimeout(() => {
        this.setState({
          phone_code_error_popup: false,
        });
      }, 2000);
    } else {
      let foundUser = {
        token: 'Welcome Home',
      };
      this.context.signIn(foundUser);
    }
  };

  handlePress = () => {
    appsFlyer.logEvent(
      'log_in',
      {param: 'value'},
      result => console.log(result, 'ev rressss'),
      error => console.error(error),
    );
  };

  render() {
    const {code, isButtonDisabled, timer} = this.state;

    return (
      <SafeAreaView style={styles.container}>
        <StatusBar style="dark" />

        <ScrollView style={styles.login_wrapper}>
          <View style={styles.sign_up_header}>
            <ImageBackground
              resizeMode="contain"
              source={require('../../assets/img/login_img.png')}
              style={[
                {width: '100%', height: 386, zIndex: 99999999},
              ]}></ImageBackground>
          </View>
          <View style={styles.sign_up_main}>
            <Text style={styles.sign_up_main_title}>
              Для получения займа, подтвердите свой номер телефона
            </Text>
            <View style={styles.sign_up_input_field_wrapper}>
              <TextInput
                style={styles.sign_up_input_field}
                onChangeText={val => {
                  this.phoneValidation(val);
                }}
                value={this.state.phone}
                keyboardType={'phone-pad'}
                // keyboardType="numeric"
                placeholder="+7 (925) 888-88-88"
                placeholderTextColor="#757575"
              />
            </View>
            <View style={styles.sign_up_check_policy_btn_main_wrapper}>
              <TouchableOpacity
                style={[
                  styles.inputRadio,
                  this.state.privacy_policy_error ? styles.error : {},
                ]}
                onPress={() => {
                  this.setState({
                    privacy_policy: !this.state.privacy_policy,
                    privacy_policy_error: false,
                  });
                }}>
                {this.state.privacy_policy && (
                  <View style={styles.activeRadioRound}>
                    <Svg
                      width={12}
                      height={10}
                      viewBox="0 0 12 10"
                      fill="none"
                      xmlns="http://www.w3.org/2000/svg">
                      <Path
                        d="M10.5 1.25l-6.3 7.5-2.7-3"
                        stroke="#2049D9"
                        strokeWidth={1.5}
                        strokeLinecap="round"
                        strokeLinejoin="round"
                      />
                    </Svg>
                  </View>
                )}
              </TouchableOpacity>
              <TouchableOpacity
                style={[
                  styles.sign_up_check_privacy_policy_btn,
                  this.state.privacy_policy_error ? styles.error_style2 : {},
                ]}
                onPress={() => {
                  this.setState({
                    privacy_policy_popup: true,
                  });
                }}>
                <Text
                  style={[
                    styles.sign_up_check_privacy_policy_btn_text,
                    this.state.privacy_policy_error ? styles.error_style : {},
                  ]}>
                  Согласие на обработку данных
                </Text>
              </TouchableOpacity>
            </View>
          </View>

          <View
            style={{width: '100%', paddingHorizontal: 16, marginBottom: 50}}>
            {this.state.phone_disable_button ? (
              <TouchableOpacity
                style={[
                  styles.sign_up_send_code_btn,
                  {backgroundColor: '#2049D9'},
                ]}
                onPress={() => {
                  // this.setState({
                  //     phone_code_popup: true
                  // })
                  // this.handlePress();
                  this.sendPhone();
                }}>
                <Text style={styles.sign_up_send_code_btn_text}>
                  Отправить код
                </Text>
              </TouchableOpacity>
            ) : (
              <TouchableOpacity
                style={[
                  styles.sign_up_send_code_btn,
                  {backgroundColor: '#8fa4eb'},
                ]}
                disabled={true}>
                <Text style={styles.sign_up_send_code_btn_text}>
                  Отправить код
                </Text>
              </TouchableOpacity>
            )}
          </View>
        </ScrollView>

        {this.state.privacy_policy_popup && (
          <View style={styles.privacy_policy_popup}>
            <View style={styles.privacy_policy_popup_wrapper}>
              <TouchableOpacity
                style={styles.privacy_policy_popup_close_btn}
                onPress={() => {
                  this.setState({
                    privacy_policy_popup: false,
                  });
                }}>
                <CloseIcon />
              </TouchableOpacity>
              <Text style={styles.privacy_policy_popup_title}>
                Правила предоставления микрозаймов
              </Text>
              <ScrollView style={styles.privacy_policy_popup_info_wrapper}>
                <View style={styles.privacy_policy_popup_info_item}>
                  <Text style={styles.privacy_policy_popup_info}>
                    Персональные данные Пользователя мобильного приложения
                    «Займы онлайн - Быстро», используемые и хранящиеся в
                    мобильном приложении «Займы онлайн - Быстро», регулируются
                    Федеральным законом от 27.07.2006 № 152- ФЗ «О персональных
                    данных». Пользователь предоставляет свои персональные данные
                    в целях получения информации, заключения договора займа
                    и/или иных договоров, получения консультационных услуг, для
                    получения рекламно-информационных материалов. Общество
                    предоставляет нецелевые потребительские микрозаймы в сумме
                    от 5 000 рублей до 100 000 рублей на срок от 61 дней до 365
                    дней. Процентные ставки в процентах годовых по договору
                    потребительского займа: Минимальная годовая процентная
                    ставка: 10,7% (APR) Максимальная годовая процентная ставка:
                    24,05% (APR) 1. ТЕРМИНЫ И ОПРЕДЕЛЕНИЯ 1.1. Если иное прямо
                    не указано в настоящих Правилах предоставления Микрозаймов,
                    все термины, используемые в настоящих Правилах
                    предоставления Микрозаймов с заглавной буквы, имеют
                    значение, присвоенное им в настоящей статье 1: Агент МФО –
                    юридическое лицо, осуществляющее от имени и по поручению
                    Микрофинансовой организации действия, связанные с
                    заключением и исполнением Договора Микрозайма, как
                    предусмотрено настоящими Правилами. Договор с Оператором ЭДС
                    – договор, заключаемый между Клиентом и Оператором ЭДС,
                    необходимый для исполнения Договора Микрозайма, в котором
                    устанавливаются, кроме прочего, порядок расчетов с
                    использованием ЭДС в соответствии с Федеральным законом от
                    27 июня 2011 года No 161-ФЗ «О национальной платежной
                    системе». Договор Микрозайма – договор Микрозайма,
                    заключаемый посредством акцепта Клиентом оферты о
                    предоставлении Микрозайма, направляемой Микрофинансовой
                    организацией посредством СМС-оферты, и предоставления
                    Микрофинансовой организацией Суммы Микрозайма Клиенту в
                    соответствии с настоящими Правилами предоставления
                    Микрозаймов. Заявка на предоставление Микрозайма –
                    предусмотренная Законом об МФО заявка на предоставление
                    микрозайма, которая подается Клиентом Микрофинансовой
                    организации в порядке, установленном п. 2.6 настоящих
                    Правил.
                  </Text>
                </View>
                <View style={styles.privacy_policy_popup_info_item}>
                  <Text style={styles.privacy_policy_popup_info}>
                    Задолженность – существующая на тот или иной момент времени
                    сумма долга Клиента по Договору Микрозайма. Клиент –
                    физическое лицо, имеющее договор об оказании услуг связи с
                    Оператором связи, желающее заключить или заключившее с
                    Микрофинансовой организацией Договор Микрозайма; Комиссия –
                    плата за предоставление Микрозайма, начисляется однократно в
                    Момент предоставления Микрозайма либо в срок, и с
                    соблюдением условий, предусмотренных настоящими Правилами.
                    Микрозаем с целевым назначением – сумма Микрозайма,
                    предоставляемая только с целью оплаты конкретной Услуги,
                    указанной в Оферте. Микрозаем с общим назначением - сумма
                    Микрозайма, предоставляемая в размере стоимости Услуги, для
                    оплаты которой Клиенту не хватило денежных средств. Сумма
                    Микрозайма с общим назначением может быть использована
                    Клиентом на оплату любой другой Услуги с учетом настоящих
                    Правил и условий Договора Микрозайма.
                  </Text>
                </View>
                <View style={styles.privacy_policy_popup_info_item}>
                  <Text style={styles.privacy_policy_popup_info}>
                    Мобильная коммерция – услуга Оператора связи, позволяющая
                    Клиенту осуществлять оплату Услуги денежными средствами,
                    размещенными на САС Клиента, с учетом совершения необходимых
                    действий по заключению договоров с Оператором связи,
                    Оператором ЭДС и иными лицами. Момент предоставления
                    Микрозайма – дата и время зачисления Суммы Микрозайма на САС
                    Клиента, подтверждаемого направлением Клиенту СМС-сообщения
                    в соответствии с п. 4.1 настоящих Правил. Оператор связи –
                    юридическое лицо или индивидуальный предприниматель,
                    оказывающие услуги подвижной радиотелефонной связи на
                    основании соответствующей лицензии, являющиеся партнером
                    Агента МФО для целей оказания дополнительных услуг в сфере
                    телекоммуникаций. Оператор ЭДС – кредитная организация,
                    имеющая право на осуществление переводов электронных
                    денежных средств без открытия банковских счетов, являющаяся
                    партнером Агента МФО для целей осуществления расчетов 2.
                    Правила предоставления Микрозайма или Правила – настоящие
                    Правила, утверждаемые Микрофинансовой организацией, в
                    которых содержатся порядок и условия предоставления
                    Микрозаймов (заключения Договоров Микрозайма) и которые
                    являются неотъемлемой частью Договора Микрозайма,
                    заключаемого Микрофинансовой организацией и Клиентом.
                    СМС-акцепт – указанное в п. 2.4.5 Правил СМС-сообщение,
                    направленное Клиентом в ответ на СМС- оферту, выражающее
                    согласие на заключение Договора Микрозайма на условиях,
                    изложенных в СМС- оферте. USSD-команда – акцепт Клиента на
                    заключение Договора Микрозайма на условиях изложенных в
                    Оферте СМС-оферта – предложение (оферта) Микрофинансовой
                    организации, направляемое Клиенту в форме СМС-сообщения,
                    описанного в п. 2.4 Правил. САС Клиента – специальный
                    авансовый счет Клиента у Оператора связи. Сумма Микрозайма –
                    подлежащая возврату Микрофинансовой организации Клиентом
                    сумма предоставленного Микрозайма без учета платежей,
                    предусмотренных Договором Микрозайма. Услуга – товар
                    (услуга), приобретение которого (которой) возможно через
                    WEB-витрину (страницу Агента МФО в сети Интернет) или через
                    сеть Оператора связи с использованием мобильного устройства
                    Клиента. ЭДС – электронные денежные средства согласно
                    Федеральному Закону от 27 июня 2011 года No 161-ФЗ «О
                    национальной платежной системе».
                  </Text>
                </View>
                <View style={styles.privacy_policy_popup_info_item}>
                  <Text style={styles.privacy_policy_popup_info}>
                    2. ПОРЯДОК ПОДАЧИ ЗАЯВКИ И УСЛОВИЯ ПРЕДОСТАВЛЕНИЕ МИКРОЗАЙМА
                    2.1. Микрофинансовая организация вправе предоставить
                    Микрозаем любому дееспособному физическому лицу,
                    заключившему договор об оказании услуг связи с Оператором
                    связи и направившим Заявку на предоставление Микрозайма в
                    соответствии с настоящими Правилами. 2.2. В случае
                    направления Клиентом стандартного запроса на получение
                    Услуги на WEB-витрине (страница Агента МФО в сети Интернет
                    и/или мобильное приложение, разработанное Агентом МФО) и
                    выявления недостаточности средств на оплату Услуги, Агент
                    МФО с одобрения Микрофинансовой организации отображает на
                    WEB-витрине в виде информационного сообщения предложение о
                    возможности получения Микрозайма и направляет такому Клиенту
                    СМС-оферту. Назначение Микрозайма – целевое либо общее –
                    определяется в содержании смс-оферты для каждого конкретного
                    случая. В случае направления Клиентом USSD-команды запроса
                    на микрозаем услкуги «Пополни позже», назначение средств
                    микрозайма – на услуги связи. 2.3. В случае направления
                    Клиентом стандартного запроса на получение Услуги
                    посредством СМС- сообщения и выявления недостаточности
                    средств на оплату Услуги Агент МФО с одобрения
                    Микрофинансовой организации направляет такому Клиенту
                    СМС-оферту. 2.4. В СМС-оферте содержится предложение
                    (оферта) Микрофинансовой организации Клиенту о
                    предоставлении Микрозайма, в котором указываются: 2.4.1.
                    Сумма Микрозайма и указание на целевое либо общее назначение
                    Микрозайма; 2.4.2. описание Услуги, на оплату которой
                    предоставляется Микрозаем; 2.4.3. требование к Клиенту
                    ознакомиться и подтвердить факт своего ознакомления и
                    согласия с настоящими Правилами; 2.4.4. требование к Клиенту
                    ознакомиться и подтвердить факт своего ознакомления и
                    согласия с прочими условиями оферты Микрофинансовой
                    организации о заключении Договора Микрозайма с указанием
                    адреса в сети Интернет, по которому она размещена; а также
                    2.4.5. текст ответного СМС-сообщения для акцепта такой
                    оферты. 2.5. Предложение (оферта) о предоставлении
                    Микрозайма считается предоставленным Клиенту с момента
                    направления указанной СМС-оферты или с момента направления
                    Клиентом USSD-команды на предоставление микрозайма услуги
                    «Пополни позже».
                  </Text>
                </View>
                <View style={styles.privacy_policy_popup_info_item2}>
                  <Text style={styles.privacy_policy_popup_info}>
                    2. ПОРЯДОК ПОДАЧИ ЗАЯВКИ И УСЛОВИЯ ПРЕДОСТАВЛЕНИЕ МИКРОЗАЙМА
                    2.1. Микрофинансовая организация вправе предоставить
                    Микрозаем любому дееспособному физическому лицу,
                    заключившему договор об оказании услуг связи с Оператором
                    связи и направившим Заявку на предоставление Микрозайма в
                    соответствии с настоящими Правилами. 2.2. В случае
                    направления Клиентом стандартного запроса на получение
                    Услуги на WEB-витрине (страница Агента МФО в сети Интернет
                    и/или мобильное приложение, разработанное Агентом МФО) и
                    выявления недостаточности средств на оплату Услуги, Агент
                    МФО с одобрения Микрофинансовой организации отображает на
                    WEB-витрине в виде информационного сообщения предложение о
                    возможности получения Микрозайма и направляет такому Клиенту
                    СМС-оферту. Назначение Микрозайма – целевое либо общее –
                    определяется в содержании смс-оферты для каждого конкретного
                    случая. В случае направления Клиентом USSD-команды запроса
                    на микрозаем услкуги «Пополни позже», назначение средств
                    микрозайма – на услуги связи. 2.3. В случае направления
                    Клиентом стандартного запроса на получение Услуги
                    посредством СМС- сообщения и выявления недостаточности
                    средств на оплату Услуги Агент МФО с одобрения
                    Микрофинансовой организации направляет такому Клиенту
                    СМС-оферту. 2.4. В СМС-оферте содержится предложение
                    (оферта) Микрофинансовой организации Клиенту о
                    предоставлении Микрозайма, в котором указываются: 2.4.1.
                    Сумма Микрозайма и указание на целевое либо общее назначение
                    Микрозайма; 2.4.2. описание Услуги, на оплату которой
                    предоставляется Микрозаем; 2.4.3. требование к Клиенту
                    ознакомиться и подтвердить факт своего ознакомления и
                    согласия с настоящими Правилами; 2.4.4. требование к Клиенту
                    ознакомиться и подтвердить факт своего ознакомления и
                    согласия с прочими условиями оферты Микрофинансовой
                    организации о заключении Договора Микрозайма с указанием
                    адреса в сети Интернет, по которому она размещена; а также
                    2.4.5. текст ответного СМС-сообщения для акцепта такой
                    оферты. 2.5. Предложение (оферта) о предоставлении
                    Микрозайма считается предоставленным Клиенту с момента
                    направления указанной СМС-оферты или с момента направления
                    Клиентом USSD-команды на предоставление микрозайма услуги
                    «Пополни позже».
                  </Text>
                </View>
                <View style={styles.privacy_policy_popup_info_item2}>
                  <Text style={styles.privacy_policy_popup_info}>
                    2.6. Посредством направления СМС-акцепта Клиент: 2.6.1.
                    подает Микрофинансовой организации Заявку на предоставление
                    Микрозайма на условиях, указанных в СМС-оферте, включающую
                    (а) согласие Клиента на обработку Микрофинансовой
                    организацией информации в соответствии с пунктом 2.7 Правил,
                    а также (б) поручения Клиента, описанные в пункте 2.7
                    Правил; 2.6.2. подтверждает факт своего ознакомления и
                    согласия с настоящими Правилами; 2.6.3. принимает
                    (акцептует) оферту о заключении Договора Микрозайма на
                    условиях, содержащихся в СМС-оферте. 2.6.4. выражает свое
                    согласие на получение информации от Микрофинансовой
                    организации и/или Агента МФО о сумме Задолженности Клиента
                    по Договору Микрозайма, с учетом положений п. 5.8. настоящих
                    Правил, в том числе в виде СМС-сообщений на мобильные
                    телефоны, адреса электронной почты или иными способами,
                    которые Микрофинансовая оргниазация / Агент МФО сочтут
                    подходящими и достаточными в каждом определенном случае 3.
                    2.6.5. подтверждает запрос на списание средств для оплаты
                    Услуги, с целью приобретения которой Клиенту предоставляется
                    Микрозаем, имеющий целевое назначение. 2.7. Принимая
                    настоящие Правила, Клиент дает: согласие на передачу и
                    обработку Оператором связи, Микрофинансовой организацией и
                    Агентом МФО следующей обезличенной информации об отношениях
                    Клиента с Оператором связи и Агентом МФО: • номер мобильного
                    телефона Клиента; • дата заключения договора между Клиентом
                    и Оператором связи; • категория Услуги, запрошенной
                    Клиентом; • цена Услуги, запрошенной Клиентом; • тарифный
                    план Клиента; • тип Клиента в зависимости от срока оплаты
                    услуг Оператора связи (Аванс, Отсрочка платежа); •
                    информация о пополнениях баланса Клиента. Клиент осведомлен
                    и согласен с тем, что передача и обработка информации,
                    указанной в настоящем пункте, будет осуществляться
                    обозначенными лицами до того, как Клиенту будет направлена
                    СМС-оферта с предложением о предоставлении Микрозайма.
                  </Text>
                </View>
                <View style={styles.privacy_policy_popup_info_item2}>
                  <Text style={styles.privacy_policy_popup_info}>
                    2.8. Посредством направления СМС-акцепта Клиент дает: -
                    согласие на передачу Оператором связи Оператору ЭДС и
                    обработку Оператором ЭДС информации о номере мобильного
                    телефона Клиента, необходимой для заключения Договора с
                    Оператором ЭДС, а также заранее данное поручение Оператору
                    ЭДС перечислять увеличения остатков ЭДС, полученных за счет
                    пополнений баланса Клиента у Оператора связи, в погашение
                    Задолженности. - поручение Оператору связи использовать
                    денежные средства, поступающие в качестве авансового платежа
                    Клиента за услуги связи, для увеличения остатка ЭДС с целью
                    погашения Задолженности по требованию Микрофинансовой
                    организации, в том числе Клиент дает поручение Оператору
                    связи, Оператору ЭДС на списание денежных средств с САС
                    Клиента по требованию Микрофинансовой организации в счет
                    оплаты ранее полученных Услуг, оплаченных средствами
                    Микрозайма, также в случае блокировки (отключения) услуги
                    Мобильная коммерция. 2.9. Обезличенная информация об
                    отношениях Клиента с Оператором связи и Агентом МФО,
                    указанная в п. 2.9.1. Правил, обрабатывается Микрофинансовой
                    организацией с использованием средств вычислительной техники
                    исключительно в целях заключения и исполнения Договора
                    Микрозайма. Срок такой обработки соответствует сроку
                    действия Договора Микрозайма. По истечении указанного срока
                    Микрофинансовая организация вправе хранить указанную
                    информацию в объеме, необходимом для осуществления прав и
                    законных интересов Микрофинансовой организации или третьих
                    лиц, в соответствии с законодательством. Информация, не
                    отвечающая указанной цели, незамедлительно уничтожается
                    Микрофинансовой организацией. 2.10. В случае если Клиент не
                    направит СМС-акцепт в течение 30 (тридцати) минут с момента
                    направления Микрофинансовой организацией СМС-оферты,
                    содержащееся в СМС-оферте предложение (оферта) о
                    предоставлении Микрозайма признается утратившим силу. 2.11.
                    Общество предоставляет нецелевые потребительские микрозаймы
                    в сумме от 5 000 рублей до 100 000 рублей на срок от 61 дней
                    до 365 дней. 2.12. Процентные ставки в процентах годовых по
                    договору потребительского займа: Минимальная годовая
                    процентная ставка: 10,7% (APR) Максимальная годовая
                    процентная ставка: 24,05% (APR) 3. РАССМОТРЕНИЕ ЗАЯВКИ НА
                    ПРЕДОСТАВЛЕНИЕ МИКРОЗАЙМА. ОТКАЗ В ПРЕДОСТАВЛЕНИИ МИКРОЗАЙМА
                    3.1. Микрофинансовая организация приложит все усилия для
                    того, чтобы рассмотреть Заявку на предоставление Микрозайма
                    в кратчайшие сроки после ее получения, но не более 3
                    (трех)дней. 3.2. По результатам рассмотрения Заявки на
                    предоставление Микрозайма Микрофинансовая организация
                    принимает одно из следующих решений: (а) о предоставлении
                    Микрозайма; или (б) об отказе в предоставлении Микрозайма.
                    3.3. Микрофинансовая организация может принять решение об
                    отказе в предоставлении Микрозайма, кроме прочего, в
                    следующих случаях: 3.3.1. если у Микрофинансовой организации
                    есть основания полагать, что Сумма Микрозайма не будет
                    возвращена Клиентом; 3.3.2. по причине технического сбоя в
                    системах Микрофинансовой организации, Оператора связи,
                    Агента МФО. 3.4. В случае если Микрофинансовая организация
                    принимает решение отказе в предоставлении Микрозайма
                    Клиенту, она обеспечивает направление Агентом МФО Клиенту
                    мотивированного отказа в предоставлении Микрозайма в виде
                    СМС-сообщения. В случае отказа от предоставления Микрозайма
                    Клиенту Микрофинансовая организация незамедлительно
                    уничтожает всю полученную информацию об отношениях Клиента с
                    Оператором связи и Агентом МФО 4. 4. ПОРЯДОК ЗАКЛЮЧЕНИЯ
                    ДОГОВОРА МИКРОЗАЙМА И ПРЕДОСТАВЛЕНИЕ МИКРОЗАЙМА 4.1. В
                    случае если Микрофинансовая организация принимает решение о
                    предоставлении Микрозайма Клиенту, она предоставляет Клиенту
                    Сумму Микрозайма путем зачисления денежных средств в размере
                    Суммы Микрозайма на САС Клиента или на Основной счет
                    Абонента. В подтверждение такого зачисления Клиенту
                    направляется соответствующее СМС-сообщение. Микрозаем
                    считается предоставленным Клиенту в момент зачисления
                    денежных средств в размере Суммы Микрозайма на САС Клиента
                    или на Основной счет в зависимости от Типа выбранного
                    абонентом Займа.
                  </Text>
                </View>
                <View style={styles.privacy_policy_popup_info_item2}>
                  <Text style={styles.privacy_policy_popup_info}>
                    4.2. Договор Микрозайма считается заключенным с момента
                    зачисления денежных средств в размере Суммы Микрозайма на
                    САС или на основном счете Клиента. Задолженность Клиента на
                    Момент предоставления Микрозайма равна Сумме Микрозайма и
                    Комиссии, в случае более позднего начисления комиссии –
                    Сумме Микрозайма 5. ПОГАШЕНИЕ МИКРОЗАЙМА 5.1. При получении
                    Микрозайма с целевым назначением, Договор Микрозайма
                    заключается с условием использования Клиентом суммы
                    Микрозайма на оплату Услуги, указанной в СМС-оферте.
                    Направление Клиентом СМС-акцепта считается одновременным
                    подтверждением Клиентом запроса на списание средств для
                    оплаты Услуги, с целью приобретения которой Клиенту
                    предоставляется Микрозаем. В случае, если по каким-либо
                    причинам каким-либо способом Клиент использует
                    предоставленный Микрозаем в иных целях, считается, что
                    Клиент не выполнил условие Договора Микрозайма о целевом
                    использовании Суммы Микрозайма. При получении Микрозайма с
                    общим назначением, Договор Микрозайма считается заключенным
                    с момента направления Клиентом сообщения с выражением
                    согласия на списание суммы Микрозайма в счет оплаты
                    выбранной Клиентом Услуги в ответ на информацию о
                    поступлении на САС Клиента Суммы Микрозайма. При отказе
                    Клиента от списания Суммы Микрозайма в счет оплаты выбранной
                    Клиентом Услуги, который также направляется в виде ответного
                    сообщения, Сумма Микрозайма возвращается с САС Клиента в
                    МФО.Клиент соглашается с тем, что по требованию
                    Микрофинансовой организации Сумма Микрозайма будет списана в
                    погашение Задолженности в соответствии с Договором
                    Микрозайма 5.2. Погашение Микрозайма осуществляется
                    посредством расчетов с использованием ЭДС. Направление
                    Клиентом СМС-акцепта является подтверждением его согласия и
                    поручения Оператору связи и Оператору ЭДС исполнять будущие
                    указания Микрофинансовой организации об использовании
                    денежных средств, являющихся авансовым платежом Клиента за
                    услуги связи, а также имеющихся на балансе Клиента, для
                    погашения Задолженности Клиента. Такое поручение считается
                    данным с момента направления СМС- акцепта и действует до
                    полного погашения Задолженности. 5.3. Клиент соглашается с
                    тем, что денежные средства, поступающие Оператору связи в
                    качестве авансового платежа Клиента как абонента Оператора
                    связи за услуги связи, как по прошествии 15 минут с Момента
                    предоставления Микрозайма, так и в любой момент времени с
                    учетом и при наличии имеющихся на балансе денежных средств,
                    могут использоваться для погашения Задолженности в следующих
                    формах: 5.3.1. Сумма, подлежащая списанию («S») с баланса
                    Клиента после пополнения («БПП»), рассчитывается по
                    следующей формуле с учетом суммы неснижаемого остатка («k»),
                    который может быть установлен Оператором связи, и
                    Задолженности абонента («D»): В случае если БПП = k, то S =
                    0, то есть списание не производится. В случае если БПП > k,
                    и БПП – k D, то S = максимальная сумма, кратная 1 руб. и
                    меньше разницы (БПП – k). В случае если БПП > k, и БПП – k
                    >= D, то S = D. 5.3.1.1. Направление Клиентом СМС-акцепта
                    является подтверждением его согласия с тем, что по
                    требованию Микрофинансовой организации, направленному
                    Оператору связи, Оператор связи передает поручение Оператору
                    ЭДС увеличить остаток ЭДС Клиента на сумму S. 5.3.1.2. При
                    отсутствии ограничений Оператор связи обязан уменьшить сумму
                    денежных средств Клиента, внесенных в качестве авансового
                    платежа за услуги связи, на сумму S незамедлительно после
                    получения подтверждения Оператора ЭДС об увеличении остатка
                    ЭДС Клиента. 5.3.1.3. Направление Клиентом СМС-акцепта
                    является подтверждением его согласия с тем, что сразу после
                    увеличения остатка ЭДС Клиента на сумму S Оператор ЭДС
                    совершит перевод такой суммы путем одновременного уменьшения
                    остатка ЭДС Клиента и увеличения остатка ЭДС Микрофинансовой
                    организации на сумму S. 5.3.2. Сумма, подлежащая списанию
                    («S») с баланса Клиента («БК»), рассчитывается по следующей
                    формуле с учетом суммы неснижаемого остатка («k»), который
                    может быть устан
                  </Text>
                </View>
                <View style={styles.privacy_policy_popup_info_item2}>
                  <Text style={styles.privacy_policy_popup_info}>
                    В случае если БК = k, то S = 0, то есть списание не
                    производится. В случае если БК > k, и БК – k D, то S =
                    максимальная сумма, кратная 1 руб. и меньше разницы (БК –
                    k). В случае если БК > k, и БК – k >= D, то S = D. 5.3.2.1.
                    Направление Клиентом СМС-акцепта является подтверждением его
                    согласия с тем, что по требованию Микрофинансовой
                    организации, направленному Оператору связи, Оператор связи
                    передает поручение Оператору ЭДС увеличить остаток ЭДС
                    Клиента на сумму S. 5.3.2.2. При отсутствии ограничений
                    Оператор связи обязан уменьшить сумму денежных средств
                    Клиента на сумму S в любой момент времени на основании
                    достаточности денежных средств на балансе Клиента. 5.3.2.3..
                    Направление Клиентом СМС-акцепта является подтверждением его
                    согласия с тем, что Оператор ЭДС совершит перевод суммы S
                    путем одновременного уменьшения остатка ЭДС Клиента и
                    увеличения остатка ЭДС Микрофинансовой организации на сумму
                    S, а также с тем, что подобное списание может быть
                    произведено независимо от факта увеличения остатка ЭДС при
                    наличии на балансе Клиента денежных средств в достаточном
                    размере. 5.4. Оператор ЭДС сообщает Микрофинансовой
                    организации о выполненном переводе, в результате чего
                    Задолженность Клиента уменьшается на сумму S. 5.5.
                    Микрофинансовая организация обеспечивает направление Клиенту
                    СМС-сообщения о переводе и состоянии Задолженности. 5.6.
                    Выбор способа списания суммы, подлежащей списанию с баланса
                    Клиента осуществляется на усмотрение Микрофинансовой
                    организации. 6. ПРОДЛЕНИЕ ДОГОВОРА МИКРОЗАЙМА 6.1.
                    Пролонгация (продление) договора микрозайма, что означает
                    изменение срока исполнения обязательства по возврату суммы
                    микрозайма, возможна исключительно путем подписания
                    заемщиком и Обществом дополнительного соглашения к договору
                    микрозайма. 6.2. Решение принимается кредитором
                    индивидуально по каждому заемщику на основании письменного
                    заявления, поданного заемщиком при условии уплаты процентов
                    за пользование микрозаймом по действующему договору в полном
                    объеме 7. ПРЕДОСТАВЛЕНИЕ ИНФОРМАЦИИ О ДОЛГЕ 7.1. Помимо
                    направления информации о Задолженности в соответствии с п.
                    2.6.5. настоящих Правил, в СМС-сообщении Микрофинансовой
                    организации Клиенту о подтверждении предоставления Суммы
                    Микрозайма (п. 4.1) будет указан короткий номер у Оператора
                    связи, направляя СМС-сообщение по которому Клиент сможет
                    узнавать о состоянии своей Задолженности.
                  </Text>
                </View>
              </ScrollView>
            </View>
          </View>
        )}
        {this.state.phone_code_popup && (
          <View style={styles.phone_code_popup}>
            <View style={styles.phone_code_popup_wrapper}>
              <TouchableOpacity
                style={[styles.phone_code_popup_close_btn]}
                onPress={() => {
                  this.setState({
                    code: ['', '', '', ''],
                    phone_code_popup: false,
                  });
                }}>
                <PhoneCodeCloseIcon />
              </TouchableOpacity>
              <KeyboardAwareScrollView
                style={styles.phone_code_popup_main_wrapper}>
                <View style={styles.phone_code_popup_main_wrapper_child}>
                  <View style={styles.phone_code_popup_header}>
                    <View style={styles.phone_icon}>
                      <PhoneIcon />
                    </View>
                    <Text style={styles.phone_code_popup_header_title}>
                      Вам поступит звонок
                    </Text>
                    <Text style={styles.phone_code_popup_header_info}>
                      Введите последние 4 цифры номера с которого вам позвонят
                    </Text>
                  </View>
                  <View style={styles.phone_code_popup_codes_input_wrapper}>
                    {code.map((value, index) => (
                      <TextInput
                        key={index}
                        ref={ref => (this.inputRefs[index] = ref)}
                        style={styles.code_input_field}
                        onChangeText={text => this.handleChange(text, index)}
                        onKeyPress={event => this.handleKeyPress(event, index)}
                        value={value}
                        placeholderTextColor="#1B1B1B"
                        keyboardType="numeric"
                        maxLength={1}
                      />
                    ))}
                  </View>

                  <View style={{width: '100%'}}>
                    {timer > 0 && (
                      <TouchableOpacity
                        disabled={true}
                        style={styles.timer_btn}>
                        <Text style={styles.timer_btn_text}>
                          Повторить через {timer} сек.
                        </Text>
                      </TouchableOpacity>
                    )}
                    {/*<Text style={styles.timer_text}>{timer > 0 ? `Повторить через ${timer} сек.` : null}</Text>*/}
                    {timer == 0 && (
                      <TouchableOpacity
                        onPress={() => {
                          this.handleResend();
                        }}
                        style={[styles.timer_btn]}>
                        <Text
                          style={[styles.timer_btn_text, {color: '#2049D9'}]}>
                          Отправить код повторно
                        </Text>
                      </TouchableOpacity>
                    )}
                  </View>

                  {this.state.keyboardOpen === false && (
                    <View
                      style={{width: '100%', position: 'absolute', bottom: 60}}>
                      {isButtonDisabled ? (
                        <TouchableOpacity
                          style={[
                            styles.code_send_btn,
                            {backgroundColor: '#8fa4eb'},
                          ]}
                          disabled={true}>
                          <Text style={styles.code_send_btn_text}>Далее</Text>
                        </TouchableOpacity>
                      ) : (
                        <TouchableOpacity
                          style={[
                            styles.code_send_btn,
                            {backgroundColor: '#2049D9'},
                          ]}
                          onPress={() => {
                            this.sendCode();
                          }}>
                          <Text style={styles.code_send_btn_text}>Далее</Text>
                        </TouchableOpacity>
                      )}
                    </View>
                  )}
                </View>
              </KeyboardAwareScrollView>
            </View>
          </View>
        )}
        {this.state.phone_error_popup && (
          <View style={styles.phone_error_popup}>
            <View style={styles.phone_error_popup_wrapper}>
              <Text style={styles.phone_error_popup_title}>
                {' '}
                Ошибка! Попробуйте еще раз{' '}
              </Text>
            </View>
          </View>
        )}
        {this.state.phone_error_popup2 && (
          <View style={styles.phone_error_popup}>
            <View style={styles.phone_error_popup_wrapper}>
              <Text style={styles.phone_error_popup_title}>
                Ошибка! Некорректный номер телефона.
              </Text>
            </View>
          </View>
        )}
        {this.state.phone_code_error_popup && (
          <View style={styles.phone_error_popup}>
            <View style={styles.phone_error_popup_wrapper}>
              <Text style={styles.phone_error_popup_title}>Не верный код</Text>
            </View>
          </View>
        )}
      </SafeAreaView>
    );
  }
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    alignItems: 'center',
    justifyContent: 'flex-start',
    backgroundColor: '#ffffff',
    width: '100%',
    height: '100%',
  },
  login_wrapper: {
    width: '100%',
    // paddingHorizontal: 12,
    paddingTop: 25,
    // paddingBottom: 50,
    flex: 1,
  },
  sign_up_header_img_box: {
    width: '100%',
    // maxWidth: 390,
    // height: 386,
  },
  sign_up_header_img_child: {
    width: '100%',
    height: '100%',
    resizeMode: 'cover',
  },
  sign_up_header: {
    width: '100%',
    marginBottom: 20,
    position: 'relative',
  },
  sign_up_header_info_wrapper: {
    position: 'absolute',
    top: 30,
    zIndex: 999,
    left: 12,
    width: '100%',
  },
  sign_up_header_title: {
    fontWeight: '600',
    fontSize: 36,
    marginBottom: 15,
    color: '#1B1B1B',
    width: 192,
  },
  sign_up_header_info_details_items_wrapper: {
    width: '100%',
  },
  sign_up_header_info_details_item: {
    width: '100%',
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 10,
  },
  sign_up_header_info_details_item_title: {
    fontWeight: '600',
    fontSize: 14,
    color: '#1B1B1B',
    marginLeft: 6,
  },
  sign_up_main_title: {
    fontWeight: '600',
    fontSize: 20,
    color: '#1B1B1B',
    marginBottom: 26,
    textAlign: 'center',
  },
  sign_up_main: {
    width: '100%',
    paddingHorizontal: 16,
    marginBottom: 51,
  },
  sign_up_input_field_wrapper: {
    width: '100%',
    marginBottom: 15,
  },
  sign_up_input_field: {
    width: '100%',
    borderWidth: 1,
    borderColor: '#D9D9D9',
    borderRadius: 15,
    height: 51,
    paddingHorizontal: 28,
    paddingVertical: 17,
    color: '#757575',
    fontWeight: '600',
    fontSize: 14,
  },
  inputRadio: {
    borderColor: '#D9D9D9',
    borderWidth: 1,
    width: 18,
    height: 18,
    borderRadius: 3,
    justifyContent: 'center',
    alignItems: 'center',
    marginRight: 11,
  },

  sign_up_check_policy_btn_main_wrapper: {
    width: '100%',
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 50,
  },
  sign_up_check_privacy_policy_btn_text: {
    color: '#1B1B1B',
    fontWeight: '400',
    fontSize: 12,
  },
  sign_up_check_privacy_policy_btn: {
    borderBottomWidth: 1,
    borderBottomColor: '#1B1B1B',
  },
  sign_up_send_code_btn: {
    width: '100%',
    alignItems: 'center',
    justifyContent: 'center',
    alignSelf: 'center',
    height: 52,
    borderRadius: 15,
  },
  sign_up_send_code_btn_text: {
    color: '#FFFFFF',
    fontWeight: '600',
    fontSize: 18,
  },
  privacy_policy_popup: {
    backgroundColor: 'rgba(157, 148, 148, 0.49)',
    shadowColor: '#000000',
    shadowOffset: {width: 0, height: 4},
    shadowOpacity: 0.25,
    shadowRadius: 4,
    elevation: 999,
    zIndex: 999999,
    width: '100%',
    height: windowHeight,
    position: 'absolute',
    left: 0,
    bottom: 0,
    alignSelf: 'center',
    alignItems: 'center',
    justifyContent: 'center',
  },
  privacy_policy_popup_wrapper: {
    width: '100%',
    borderTopLeftRadius: 30,
    borderTopRightRadius: 30,
    backgroundColor: '#ffffff',
    shadowColor: 'rgb(0, 0, 0)',
    shadowOffset: {width: 0, height: 4},
    shadowOpacity: 0.25,
    shadowRadius: 34,
    elevation: 999,
    zIndex: 999999,
    position: 'relative',
    // bottom: 0,
    top: 50,
    paddingTop: 60,
    paddingHorizontal: 16,
    paddingBottom: 94,
    height: '100%',
  },
  privacy_policy_popup_close_btn: {
    position: 'absolute',
    right: 16,
    top: 16,
  },
  privacy_policy_popup_title: {
    color: '#1B1B1B',
    fontWeight: '600',
    fontSize: 24,
    marginBottom: 34,
    textAlign: 'center',
  },
  privacy_policy_popup_info_wrapper: {
    width: '100%',
    flex: 1,
    // height: 800
  },
  privacy_policy_popup_info: {
    color: '#1B1B1B',
    fontWeight: '400',
    fontSize: 16,
  },
  privacy_policy_popup_info_item: {
    width: '100%',
    marginBottom: 24,
  },
  privacy_policy_popup_info_item2: {
    width: '100%',
    marginBottom: 8,
  },
  phone_code_popup: {
    backgroundColor: 'rgba(157, 148, 148, 0.49)',
    shadowColor: '#000000',
    shadowOffset: {width: 0, height: 4},
    shadowOpacity: 0.25,
    shadowRadius: 4,
    elevation: 999,
    zIndex: 999999,
    width: '100%',
    height: Platform.OS === 'android' ? '100%' : windowHeight,
    position: 'absolute',
    left: 0,
    bottom: 0,
    alignSelf: 'center',
    alignItems: 'center',
    justifyContent: 'center',
  },
  phone_code_popup_wrapper: {
    width: '100%',
    height: '100%',
    position: 'relative',
    backgroundColor: '#FFFFFF',
    // paddingBottom: 50,
    paddingTop: 20,
  },
  phone_code_popup_close_btn: {
    width: '100%',
    position: 'absolute',
    left: 16,
    top: 50,
    zIndex: 99,
  },
  phone_code_popup_main_wrapper: {
    width: '100%',
    flex: 1,
    position: 'relative',
  },
  phone_code_popup_main_wrapper_child: {
    width: '100%',
    paddingTop: 63,
    justifyContent: 'flex-start',
    alignSelf: 'center',
    alignItems: 'center',
    height: windowHeight,
    paddingHorizontal: 16,
  },

  phone_code_popup_header: {
    width: '100%',
    marginBottom: 64,
  },
  phone_code_popup_header_title: {
    textAlign: 'center',
    color: '#1B1B1B',
    fontWeight: '600',
    fontSize: 24,
    marginBottom: 12,
  },
  phone_code_popup_header_info: {
    textAlign: 'center',
    color: '#757575',
    fontWeight: '400',
    fontSize: 16,
    width: 295,
    justifyContent: 'center',
    alignItems: 'center',
    alignSelf: 'center',
  },
  code_input_field: {
    borderWidth: 1,
    borderColor: '#D9D9D9',
    height: 58,
    width: 61,
    borderRadius: 15,
    justifyContent: 'center',
    alignItems: 'center',
    textAlign: 'center',
    color: '#1B1B1B',
    fontWeight: '600',
    fontSize: 24,
  },
  phone_code_popup_codes_input_wrapper: {
    width: 298,
    flexDirection: 'row',
    alignSelf: 'center',
    alignItems: 'center',
    justifyContent: 'space-between',
    marginBottom: 13,
  },
  code_send_btn: {
    width: '100%',
    alignItems: 'center',
    justifyContent: 'center',
    alignSelf: 'center',
    height: 52,
    borderRadius: 15,
  },
  code_send_btn_text: {
    color: '#FFFFFF',
    fontWeight: '600',
    fontSize: 18,
  },
  timer_btn: {
    alignItems: 'center',
    justifyContent: 'center',
    alignSelf: 'center',
  },
  timer_btn_text: {
    color: '#757575',
    fontWeight: '400',
    fontSize: 14,
  },
  phone_error_popup: {
    backgroundColor: 'rgba(157, 148, 148, 0.49)',
    shadowColor: '#000000',
    shadowOffset: {width: 0, height: 4},
    shadowOpacity: 0.25,
    shadowRadius: 4,
    elevation: 999,
    zIndex: 999999,
    width: '100%',
    height: '100%',
    position: 'absolute',
    left: 0,
    bottom: 0,
    alignSelf: 'center',
    alignItems: 'center',
    // justifyContent: 'center',
    paddingTop: 50,
  },
  phone_error_popup_wrapper: {
    width: '90%',
    backgroundColor: 'red',
    height: 100,
    borderRadius: 15,
    justifyContent: 'center',
    alignItems: 'center',
  },
  phone_error_popup_title: {
    color: '#ffffff',
    fontWeight: '600',
    fontSize: 20,
  },

  phone_icon: {
    justifyContent: 'center',
    alignItems: 'center',
    marginBottom: 15,
  },
  error: {
    borderWidth: 1,
    borderColor: 'red',
  },
  error_style: {
    color: 'red',
  },

  error_style2: {
    borderBottomColor: 'red',
  },
});
